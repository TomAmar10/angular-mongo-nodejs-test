{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet TaskFormComponent = class TaskFormComponent {\n  constructor(taskService, fb) {\n    this.taskService = taskService;\n    this.fb = fb;\n    this.isValid = true;\n  }\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      description: [null, [Validators.required]],\n      customer_id: [null, [Validators.required]],\n      created: [null],\n      isDone: [false, [Validators.required]]\n    });\n  }\n  onSubmit() {\n    Object.keys(this.myForm.value).map(o => {\n      if (!this.myForm.value[o] && o !== 'isDone') {\n        this.isValid = false;\n        return;\n      }\n    });\n    if (!this.isValid) return;\n    const date = new Date(this.myForm.value.created).toISOString().split('.')[0];\n    this.newTask = {\n      ...this.myForm.value,\n      created: date.replace('T', ' ')\n    };\n    this.taskService.create(this.newTask);\n  }\n  validate() {\n    this.isValid = true;\n  }\n};\nTaskFormComponent = __decorate([Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css']\n})], TaskFormComponent);\nexport { TaskFormComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAuB,eAAe;AACxD,SAIEC,UAAU,QACL,gBAAgB;AAShB,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YAAoBC,WAAyB,EAAUC,EAAe;IAAlD,gBAAW,GAAXD,WAAW;IAAwB,OAAE,GAAFC,EAAE;IAGzD,YAAO,GAAG,IAAI;EAH2D;EAKzEC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC1BC,WAAW,EAAE,CAAC,IAAI,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MAC1CC,WAAW,EAAE,CAAC,IAAI,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MAC1CE,OAAO,EAAE,CAAC,IAAI,CAAC;MACfC,MAAM,EAAE,CAAC,KAAK,EAAE,CAACZ,UAAU,CAACS,QAAQ,CAAC;KACtC,CAAC;EACJ;EAEAI,QAAQ;IACNC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACT,MAAM,CAACU,KAAK,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAI;MACvC,IAAI,CAAC,IAAI,CAACZ,MAAM,CAACU,KAAK,CAACE,CAAC,CAAC,IAAIA,CAAC,KAAK,QAAQ,EAAE;QAC3C,IAAI,CAACC,OAAO,GAAG,KAAK;QACpB;;IAEJ,CAAC,CAAC;IACF,IAAI,CAAC,IAAI,CAACA,OAAO,EAAE;IACnB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACf,MAAM,CAACU,KAAK,CAACL,OAAO,CAAC,CAC7CW,WAAW,EAAE,CACbC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG;MAAE,GAAG,IAAI,CAAClB,MAAM,CAACU,KAAK;MAAEL,OAAO,EAAES,IAAI,CAACK,OAAO,CAAC,GAAG,EAAE,GAAG;IAAC,CAAE;IACxE,IAAI,CAACtB,WAAW,CAACuB,MAAM,CAAC,IAAI,CAACF,OAAO,CAAC;EACvC;EAEAG,QAAQ;IACN,IAAI,CAACR,OAAO,GAAG,IAAI;EACrB;CACD;AAjCYlB,iBAAiB,eAL7BF,SAAS,CAAC;EACT6B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW7B,iBAAiB,CAiC7B;SAjCYA,iBAAiB","names":["Component","Validators","TaskFormComponent","constructor","taskService","fb","ngOnInit","myForm","group","description","required","customer_id","created","isDone","onSubmit","Object","keys","value","map","o","isValid","date","Date","toISOString","split","newTask","replace","create","validate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\components\\task-form\\task-form.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport TaskModel from 'src/app/models/task-model';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css'],\n})\nexport class TaskFormComponent implements OnInit {\n  constructor(private taskService: TasksService, private fb: FormBuilder) {}\n  myForm: FormGroup;\n  newTask: TaskModel;\n  isValid = true;\n\n  ngOnInit(): void {\n    this.myForm = this.fb.group({\n      description: [null, [Validators.required]],\n      customer_id: [null, [Validators.required]],\n      created: [null],\n      isDone: [false, [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    Object.keys(this.myForm.value).map((o) => {\n      if (!this.myForm.value[o] && o !== 'isDone') {\n        this.isValid = false;\n        return;\n      }\n    });\n    if (!this.isValid) return;\n    const date = new Date(this.myForm.value.created)\n      .toISOString()\n      .split('.')[0];\n    this.newTask = { ...this.myForm.value, created: date.replace('T', ' ') };\n    this.taskService.create(this.newTask);\n  }\n\n  validate() {\n    this.isValid = true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
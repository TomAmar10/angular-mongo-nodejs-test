{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/Desktop/John Brice/angular/test/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(http) {\n    this.http = http;\n    this.URL = 'http://localhost:3700/api/tasks';\n    this.tasksSubject = new BehaviorSubject([]);\n  }\n  getAll() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const result = yield _this.http.get(`${_this.URL}/all`);\n    })();\n  }\n  getById(id) {\n    return this.http.get(`${this.URL}/single/${id}`);\n  }\n  create(task) {\n    return this.http.post(`${this.URL}/all`, task);\n  }\n  update(id, task) {\n    return this.http.put(`${this.URL}/${id}`, task);\n  }\n  delete(id) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n}\nTasksService.ɵfac = function TasksService_Factory(t) {\n  return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n};\nTasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TasksService,\n  factory: TasksService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAMlD,OAAM,MAAOC,YAAY;EAMvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALxB,QAAG,GAAG,iCAAiC;IAG/B,iBAAY,GAAG,IAAIH,eAAe,CAAc,EAAE,CAAC;EAEpB;EAEjCI,MAAM;IAAA;IAAA;MACV,MAAMC,MAAM,SAAS,KAAI,CAACF,IAAI,CAACG,GAAG,CAAc,GAAG,KAAI,CAACC,GAAG,MAAM,CAAC;IAAC;EACrE;EAEAC,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,GAAG,WAAWE,EAAE,EAAE,CAAC;EAC7D;EAEAC,MAAM,CAACC,IAAe;IACpB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAY,GAAG,IAAI,CAACL,GAAG,MAAM,EAAEI,IAAI,CAAC;EAC3D;EAEAE,MAAM,CAACJ,EAAU,EAAEE,IAAe;IAChC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACP,GAAG,IAAIE,EAAE,EAAE,EAAEE,IAAI,CAAC;EACvD;EAEAI,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACN,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACR,GAAG,IAAIE,EAAE,EAAE,CAAC;EACpD;;AA1BWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAe,SAAZf,YAAY;EAAAgB,YAFX;AAAM","names":["BehaviorSubject","TasksService","constructor","http","getAll","result","get","URL","getById","id","create","task","post","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\services\\tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport TaskModel from '../models/task-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TasksService {\n  URL = 'http://localhost:3700/api/tasks';\n\n  private tasks: TaskModel[];\n  private tasksSubject = new BehaviorSubject<TaskModel[]>([]);\n\n  constructor(private http: HttpClient) {}\n\n  async getAll(): Observable<TaskModel[]> {\n    const result =await  this.http.get<TaskModel[]>(`${this.URL}/all`);\n  }\n\n  getById(id: number): Observable<TaskModel> {\n    return this.http.get<TaskModel>(`${this.URL}/single/${id}`);\n  }\n\n  create(task: TaskModel): Observable<TaskModel> {\n    return this.http.post<TaskModel>(`${this.URL}/all`, task);\n  }\n\n  update(id: number, task: TaskModel): Observable<void> {\n    return this.http.put<void>(`${this.URL}/${id}`, task);\n  }\n\n  delete(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.URL}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nexport class Service {\n  constructor(http, router, location) {\n    this.http = http;\n    this.router = router;\n    this.location = location;\n    this.URL = 'http://localhost:3200/api/customers';\n    this.tasksSubject = new BehaviorSubject([]);\n    this.isHomeSubject = new BehaviorSubject(true);\n    this.getAll();\n    this.setPath();\n  }\n  setPath() {\n    this.isHomeSubject.next(this.location.path() === '');\n  }\n  changePath() {\n    this.isHomeSubject.next(!this.isHomeSubject.value);\n  }\n  get isHome$() {\n    return this.isHomeSubject.asObservable();\n  }\n  get tasks$() {\n    return this.tasksSubject.asObservable();\n  }\n  getAll() {\n    this.http.get(`${this.URL}/all`).subscribe(res => {\n      this.tasksSubject.next(res);\n    });\n  }\n}\nService.ɵfac = function Service_Factory(t) {\n  return new (t || Service)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.Location));\n};\nService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Service,\n  factory: Service.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;;;AAQlD,OAAM,MAAOC,OAAO;EAMlBC,YACUC,IAAgB,EAChBC,MAAc,EACdC,QAAkB;IAFlB,SAAI,GAAJF,IAAI;IACJ,WAAM,GAANC,MAAM;IACN,aAAQ,GAARC,QAAQ;IARlB,QAAG,GAAG,qCAAqC;IAEnC,iBAAY,GAAG,IAAIL,eAAe,CAAc,EAAE,CAAC;IACnD,kBAAa,GAAG,IAAIA,eAAe,CAAU,IAAI,CAAC;IAOxD,IAAI,CAACM,MAAM,EAAE;IACb,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAACJ,QAAQ,CAACK,IAAI,EAAE,KAAK,EAAE,CAAC;EACtD;EACAC,UAAU;IACR,IAAI,CAACH,aAAa,CAACC,IAAI,CAAC,CAAC,IAAI,CAACD,aAAa,CAACI,KAAK,CAAC;EACpD;EAEA,IAAIC,OAAO;IACT,OAAO,IAAI,CAACL,aAAa,CAACM,YAAY,EAAE;EAC1C;EACA,IAAIC,MAAM;IACR,OAAO,IAAI,CAACC,YAAY,CAACF,YAAY,EAAE;EACzC;EAEAR,MAAM;IACJ,IAAI,CAACH,IAAI,CAACc,GAAG,CAAc,GAAG,IAAI,CAACC,GAAG,MAAM,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC9D,IAAI,CAACJ,YAAY,CAACP,IAAI,CAACW,GAAG,CAAC;IAC7B,CAAC,CAAC;EACJ;;AAjCWnB,OAAO;mBAAPA,OAAO;AAAA;AAAPA,OAAO;SAAPA,OAAO;EAAAoB,SAAPpB,OAAO;EAAAqB,YAFN;AAAM","names":["BehaviorSubject","Service","constructor","http","router","location","getAll","setPath","isHomeSubject","next","path","changePath","value","isHome$","asObservable","tasks$","tasksSubject","get","URL","subscribe","res","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\mongoDB\\mongo-server-1\\frontend\\src\\app\\services\\customers.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport TaskModel from '../models/task-model';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class Service {\r\n  URL = 'http://localhost:3200/api/customers';\r\n\r\n  private tasksSubject = new BehaviorSubject<TaskModel[]>([]);\r\n  private isHomeSubject = new BehaviorSubject<boolean>(true);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private location: Location\r\n  ) {\r\n    this.getAll();\r\n    this.setPath();\r\n  }\r\n\r\n  setPath() {\r\n    this.isHomeSubject.next(this.location.path() === '');\r\n  }\r\n  changePath() {\r\n    this.isHomeSubject.next(!this.isHomeSubject.value);\r\n  }\r\n\r\n  get isHome$() {\r\n    return this.isHomeSubject.asObservable();\r\n  }\r\n  get tasks$() {\r\n    return this.tasksSubject.asObservable();\r\n  }\r\n\r\n  getAll() {\r\n    this.http.get<TaskModel[]>(`${this.URL}/all`).subscribe((res) => {\r\n      this.tasksSubject.next(res);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
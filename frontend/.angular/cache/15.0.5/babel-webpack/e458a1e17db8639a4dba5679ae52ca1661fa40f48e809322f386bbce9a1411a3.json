{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(`${this.URL}`);\n  }\n  getById(id) {\n    return this.http.get(`${this.URL}/${id}`);\n  }\n  create(TaskModel) {\n    return this.http.post(`${this.URL}`, TaskModel);\n  }\n  update(id, TaskModel) {\n    return this.http.put(`${this.URL}/${id}`, TaskModel);\n  }\n  delete(id) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n}\nTasksService.ɵfac = function TasksService_Factory(t) {\n  return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n};\nTasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TasksService,\n  factory: TasksService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAc,GAAG,IAAI,CAACC,GAAG,EAAE,CAAC;EAClD;EAEAC,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,GAAG,IAAIE,EAAE,EAAE,CAAC;EACtD;EAEAC,MAAM,CAACC,SAAoB;IACzB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAY,GAAG,IAAI,CAACL,GAAG,EAAE,EAAEI,SAAS,CAAC;EAC5D;EAEAE,MAAM,CAACJ,EAAU,EAAEE,SAAoB;IACrC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACP,GAAG,IAAIE,EAAE,EAAE,EAAEE,SAAS,CAAC;EAC5D;EAEAI,MAAM,CAACN,EAAU;IACf,OAAO,IAAI,CAACL,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACR,GAAG,IAAIE,EAAE,EAAE,CAAC;EACpD;;AAtBWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAc,SAAZd,YAAY;EAAAe,YAFX;AAAM","names":["TasksService","constructor","http","getAll","get","URL","getById","id","create","TaskModel","post","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\services\\tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<TaskModel[]> {\n    return this.http.get<TaskModel[]>(`${this.URL}`);\n  }\n\n  getById(id: number): Observable<TaskModel> {\n    return this.http.get<TaskModel>(`${this.URL}/${id}`);\n  }\n\n  create(TaskModel: TaskModel): Observable<TaskModel> {\n    return this.http.post<TaskModel>(`${this.URL}`, TaskModel);\n  }\n\n  update(id: number, TaskModel: TaskModel): Observable<void> {\n    return this.http.put<void>(`${this.URL}/${id}`, TaskModel);\n  }\n\n  delete(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.URL}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
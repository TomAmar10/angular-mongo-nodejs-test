{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tasks.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction TaskFormComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"please fill all details\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TaskFormComponent {\n  constructor(taskService, fb) {\n    this.taskService = taskService;\n    this.fb = fb;\n    this.selectBorder = '';\n    this.isValid = true;\n  }\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      description: [null, [Validators.required]],\n      customer_id: [null, [Validators.required]],\n      created: [null],\n      isDone: [false, [Validators.required]]\n    });\n  }\n  onSubmit() {\n    Object.keys(this.myForm.value).map(o => {\n      console.log(o);\n      if (!this.myForm.value[o]) console.log('here');\n      if (!o) this.isValid = false;\n    });\n    if (!this.isValid) return;\n    if (!this.myForm.value.customer_id) {\n      this.selectBorder = '3px red solid';\n      return;\n    }\n    const date = new Date(this.myForm.value.created).toISOString().split('.')[0];\n    this.newTask = {\n      ...this.myForm.value,\n      created: date.replace('T', ' ')\n    };\n    this.taskService.create(this.newTask);\n  }\n  validate() {\n    this.selectBorder = '';\n  }\n}\nTaskFormComponent.ɵfac = function TaskFormComponent_Factory(t) {\n  return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nTaskFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskFormComponent,\n  selectors: [[\"app-task-form\"]],\n  decls: 34,\n  vars: 8,\n  consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"error-msg\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"description\"], [\"formControlName\", \"customer_id\", 3, \"click\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"ngValue\"], [\"type\", \"datetime-local\", \"formControlName\", \"created\"], [\"type\", \"checkbox\", \"formControlName\", \"isDone\"], [1, \"submit-btn\"], [1, \"error-msg\"]],\n  template: function TaskFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function TaskFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"Add New Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, TaskFormComponent_span_4_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n      i0.ɵɵtext(7, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n      i0.ɵɵtext(11, \"Customer name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 4);\n      i0.ɵɵlistener(\"click\", function TaskFormComponent_Template_select_click_12_listener() {\n        return ctx.validate();\n      });\n      i0.ɵɵelementStart(13, \"option\", 5);\n      i0.ɵɵtext(14, \"choose customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 6);\n      i0.ɵɵtext(16, \"tom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 6);\n      i0.ɵɵtext(18, \"amit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 6);\n      i0.ɵɵtext(20, \"cfir\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"label\");\n      i0.ɵɵtext(23, \"Created:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\")(26, \"label\");\n      i0.ɵɵtext(27, \"Status:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\");\n      i0.ɵɵelement(29, \"input\", 8);\n      i0.ɵɵtext(30, \" done\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 9)(32, \"button\");\n      i0.ɵɵtext(33, \"Add\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isValid);\n      i0.ɵɵadvance(8);\n      i0.ɵɵstyleMap(\"outline:\" + ctx.selectBorder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", 2);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", 3);\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".form-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  margin-top: 0;\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n  border: 1px black solid;\\r\\n  padding: 1rem;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\r\\n  width: 24rem;\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  font-size: 1.2rem;\\r\\n  margin-bottom:1rem;\\r\\n  margin-top: 0.5rem;\\r\\n}\\r\\n\\r\\ninput[type=text][_ngcontent-%COMP%], input[type=datetime-local][_ngcontent-%COMP%] {\\r\\n  border-radius: 5px;\\r\\n  font-size: 1rem;\\r\\n  padding: 0.2rem 0.5rem;\\r\\n  width: 12.5rem;\\r\\n  border: none;\\r\\n  outline: 3px rgb(106, 104, 104) solid;\\r\\n}\\r\\nform[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\r\\n  border-radius: 5px;\\r\\n  width: 13.5rem;\\r\\n  padding: 0.2rem 0.5rem;\\r\\n  font-size: 1rem;\\r\\n  padding: 0.2rem 1rem;\\r\\n  border: none;\\r\\n  outline: 3px rgb(106, 104, 104) solid;\\r\\n}\\r\\nform[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{\\r\\n  width: 1rem;\\r\\n  margin-right: 1rem;\\r\\n  margin-left: -2rem;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:last-child {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n  background-color: rgb(179, 177, 177);\\r\\n  border: 1px black solid;\\r\\n  font-size: 1rem;\\r\\n  margin-top: 0.5rem;\\r\\n  font-weight: bold;\\r\\n  border-radius: 5px;\\r\\n  padding: 0.3rem 1rem;\\r\\n  cursor: pointer;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover{\\r\\n  background-color: rgb(161, 158, 158);\\r\\n  padding: 0.3rem 1.1rem;\\r\\n}\\r\\n\\r\\n.error-msg[_ngcontent-%COMP%]{\\r\\n  color: red;\\r\\n  font-size: 1.1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWZvcm0vdGFzay1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsWUFBWTtFQUNaLHFDQUFxQztBQUN2QztBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLG9CQUFvQjtFQUNwQixZQUFZO0VBQ1oscUNBQXFDO0FBQ3ZDO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0Usb0NBQW9DO0VBQ3BDLHVCQUF1QjtFQUN2QixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLGVBQWU7QUFDakI7QUFDQTtFQUNFLG9DQUFvQztFQUNwQyxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAycmVtO1xyXG59XHJcblxyXG5oMSB7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG59XHJcblxyXG5mb3JtIHtcclxuICBib3JkZXI6IDFweCBibGFjayBzb2xpZDtcclxuICBwYWRkaW5nOiAxcmVtO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuXHJcbmZvcm0gZGl2IHtcclxuICB3aWR0aDogMjRyZW07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgbWFyZ2luLWJvdHRvbToxcmVtO1xyXG4gIG1hcmdpbi10b3A6IDAuNXJlbTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT10ZXh0XSwgaW5wdXRbdHlwZT1kYXRldGltZS1sb2NhbF0ge1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgcGFkZGluZzogMC4ycmVtIDAuNXJlbTtcclxuICB3aWR0aDogMTIuNXJlbTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgb3V0bGluZTogM3B4IHJnYigxMDYsIDEwNCwgMTA0KSBzb2xpZDtcclxufVxyXG5mb3JtIHNlbGVjdCB7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHdpZHRoOiAxMy41cmVtO1xyXG4gIHBhZGRpbmc6IDAuMnJlbSAwLjVyZW07XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIHBhZGRpbmc6IDAuMnJlbSAxcmVtO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBvdXRsaW5lOiAzcHggcmdiKDEwNiwgMTA0LCAxMDQpIHNvbGlkO1xyXG59XHJcbmZvcm0gaW5wdXRbdHlwZT1jaGVja2JveF17XHJcbiAgd2lkdGg6IDFyZW07XHJcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gIG1hcmdpbi1sZWZ0OiAtMnJlbTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmZvcm0gZGl2Omxhc3QtY2hpbGQge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuYnV0dG9ue1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNzksIDE3NywgMTc3KTtcclxuICBib3JkZXI6IDFweCBibGFjayBzb2xpZDtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBwYWRkaW5nOiAwLjNyZW0gMXJlbTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuYnV0dG9uOmhvdmVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNjEsIDE1OCwgMTU4KTtcclxuICBwYWRkaW5nOiAwLjNyZW0gMS4xcmVtO1xyXG59XHJcblxyXG4uZXJyb3ItbXNne1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgZm9udC1zaXplOiAxLjFyZW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","TaskFormComponent","constructor","taskService","fb","ngOnInit","myForm","group","description","required","customer_id","created","isDone","onSubmit","Object","keys","value","map","o","console","log","isValid","selectBorder","date","Date","toISOString","split","newTask","replace","create","validate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\components\\task-form\\task-form.component.ts","C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\components\\task-form\\task-form.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport TaskModel from 'src/app/models/task-model';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css'],\n})\nexport class TaskFormComponent implements OnInit {\n  selectBorder = '';\n  constructor(private taskService: TasksService, private fb: FormBuilder) {}\n  myForm: FormGroup;\n  newTask: TaskModel;\n  isValid = true;\n\n  ngOnInit(): void {\n    this.myForm = this.fb.group({\n      description: [null, [Validators.required]],\n      customer_id: [null, [Validators.required]],\n      created: [null],\n      isDone: [false, [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    Object.keys(this.myForm.value).map((o) => {\n      console.log(o);\n      if (!this.myForm.value[o]) console.log('here')\n      if (!o) this.isValid = false;\n    });\n    if (!this.isValid) return;\n    if (!this.myForm.value.customer_id) {\n      this.selectBorder = '3px red solid';\n      return;\n    }\n    const date = new Date(this.myForm.value.created)\n      .toISOString()\n      .split('.')[0];\n    this.newTask = { ...this.myForm.value, created: date.replace('T', ' ') };\n    this.taskService.create(this.newTask);\n  }\n\n  validate() {\n    this.selectBorder = '';\n  }\n}\n","<div class=\"form-container\">\n  <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n    <h1>Add New Task</h1>\n    <span class=\"error-msg\" *ngIf=\"!isValid\">please fill all details</span>\n    <div>\n      <label>Description:</label>\n      <input type=\"text\" formControlName=\"description\" />\n    </div>\n    <div>\n      <label>Customer name:</label>\n      <select\n        formControlName=\"customer_id\"\n        (click)=\"validate()\"\n        [style]=\"'outline:' + selectBorder\"\n      >\n        <option [ngValue]=\"null\" disabled>choose customer</option>\n        <option [ngValue]=\"1\">tom</option>\n        <option [ngValue]=\"2\">amit</option>\n        <option [ngValue]=\"3\">cfir</option>\n      </select>\n    </div>\n    <div>\n      <label>Created:</label>\n      <input type=\"datetime-local\" formControlName=\"created\" />\n    </div>\n    <div>\n      <label>Status:</label>\n      <div><input type=\"checkbox\" formControlName=\"isDone\" /> done</div>\n    </div>\n    <div class=\"submit-btn\">\n      <button>Add</button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/operations.service\";\nimport * as i2 from \"src/app/services/accounts.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../single-operation/single-operation.component\";\nfunction MainPageComponent_app_single_operation_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-single-operation\", 7);\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"operation\", item_r2);\n  }\n}\nexport class MainPageComponent {\n  constructor(operationService, accountsService) {\n    this.operationService = operationService;\n    this.accountsService = accountsService;\n  }\n  ngOnInit() {\n    this.operationService.getAll();\n    this.operations$ = this.operationService.operations$;\n    this.accountsService.getAll();\n    this.accountsService.accounts$.subscribe(res => this.accounts = res);\n  }\n  search(accNumber) {\n    const currAccount = this.accounts.filter(a => a.number === +accNumber);\n    const account = currAccount[0];\n    if (currAccount.includes(account)) {\n      console.log(account);\n      this.operationService.getByAccount(account._id);\n    }\n  }\n}\nMainPageComponent.ɵfac = function MainPageComponent_Factory(t) {\n  return new (t || MainPageComponent)(i0.ɵɵdirectiveInject(i1.OperationsService), i0.ɵɵdirectiveInject(i2.AccountsService));\n};\nMainPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainPageComponent,\n  selectors: [[\"app-main-page\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"main-page\"], [1, \"account-search\"], [\"type\", \"number\", \"placeholder\", \"search by account\", \"[maxlength\", \"4\"], [\"account\", \"\"], [3, \"click\"], [1, \"operations-container\"], [3, \"operation\", 4, \"ngFor\", \"ngForOf\"], [3, \"operation\"]],\n  template: function MainPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"input\", 2, 3);\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function MainPageComponent_Template_button_click_4_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵtext(5, \"search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵtemplate(7, MainPageComponent_app_single_operation_7_Template, 1, 1, \"app-single-operation\", 6);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 1, ctx.operations$));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.SingleOperationComponent, i3.AsyncPipe],\n  styles: [\".main-page[_ngcontent-%COMP%] {\\r\\n  padding: 2rem 8rem;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.account-search[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 2rem;\\r\\n}\\r\\n.operations-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], button[_ngcontent-%COMP%]{\\r\\n  padding: 0.2rem 1rem;\\r\\n  border-radius: 5px;\\r\\n  border: none;\\r\\n  font-size: 1.1rem;\\r\\n  outline: 1px white solid;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n  cursor: pointer;\\r\\n  margin-left: 1rem;\\r\\n  background-color: rgb(4, 107, 4);\\r\\n  color: white;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover{\\r\\n  padding: 0.2rem 1.1rem;\\r\\n  background-color: rgb(9, 125, 9);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYWluLXBhZ2UvbWFpbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGFBQWE7RUFDYiw2QkFBNkI7RUFDN0IsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQix3QkFBd0I7QUFDMUI7QUFDQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0NBQWdDO0VBQ2hDLFlBQVk7QUFDZDtBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLGdDQUFnQztBQUNsQyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluLXBhZ2Uge1xyXG4gIHBhZGRpbmc6IDJyZW0gOHJlbTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmFjY291bnQtc2VhcmNoIHtcclxuICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG59XHJcbi5vcGVyYXRpb25zLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbmlucHV0LCBidXR0b257XHJcbiAgcGFkZGluZzogMC4ycmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBmb250LXNpemU6IDEuMXJlbTtcclxuICBvdXRsaW5lOiAxcHggd2hpdGUgc29saWQ7XHJcbn1cclxuYnV0dG9ue1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBtYXJnaW4tbGVmdDogMXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNCwgMTA3LCA0KTtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuYnV0dG9uOmhvdmVye1xyXG4gIHBhZGRpbmc6IDAuMnJlbSAxLjFyZW07XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDksIDEyNSwgOSk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAWIA,0CAGwB;;;;IADtBA,mCAAkB;;;ACDxB,OAAM,MAAOC,iBAAiB;EAG5BC,YACUC,gBAAmC,EACnCC,eAAgC;IADhC,qBAAgB,GAAhBD,gBAAgB;IAChB,oBAAe,GAAfC,eAAe;EACtB;EAEHC,QAAQ;IACN,IAAI,CAACF,gBAAgB,CAACG,MAAM,EAAE;IAC9B,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,gBAAgB,CAACI,WAAW;IAEpD,IAAI,CAACH,eAAe,CAACE,MAAM,EAAE;IAC7B,IAAI,CAACF,eAAe,CAACI,SAAS,CAACC,SAAS,CAAEC,GAAG,IAAM,IAAI,CAACC,QAAQ,GAAGD,GAAI,CAAC;EAC1E;EAEAE,MAAM,CAACC,SAAiB;IACtB,MAAMC,WAAW,GAAG,IAAI,CAACH,QAAQ,CAACI,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAK,CAACJ,SAAS,CAAC;IACxE,MAAMK,OAAO,GAAGJ,WAAW,CAAC,CAAC,CAAC;IAC9B,IAAIA,WAAW,CAACK,QAAQ,CAACD,OAAO,CAAC,EAAE;MACjCE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpB,IAAI,CAACf,gBAAgB,CAACmB,YAAY,CAACJ,OAAO,CAACK,GAAG,CAAC;;EAEnD;;AAvBWtB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDZ9B5B,8BAAuB;MAEnBA,8BAKE;MACFA,iCAAwC;MAAhCA;QAAAA;QAAA;QAAA,OAASA,oCAAqB;MAAA,EAAC;MAACA,sBAAM;MAAAA,iBAAS;MAEzDA,8BAAkC;MAChCA,oGAGwB;;MAC1BA,iBAAM;;;MAHeA,eAAsB;MAAtBA,+DAAsB","names":["i0","MainPageComponent","constructor","operationService","accountsService","ngOnInit","getAll","operations$","accounts$","subscribe","res","accounts","search","accNumber","currAccount","filter","a","number","account","includes","console","log","getByAccount","_id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\mongoDB\\TomAmar_test4\\frontend\\src\\app\\components\\main-page\\main-page.component.html","C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\mongoDB\\TomAmar_test4\\frontend\\src\\app\\components\\main-page\\main-page.component.ts"],"sourcesContent":["<div class=\"main-page\">\n  <div class=\"account-search\">\n    <input\n      type=\"number\"\n      #account\n      placeholder=\"search by account\"\n      [maxlength=4\n    />\n    <button (click)=\"search(account.value)\">search</button>\n  </div>\n  <div class=\"operations-container\">\n    <app-single-operation\n      *ngFor=\"let item of operations$ | async\"\n      [operation]=\"item\"\n    ></app-single-operation>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport AccountModel from \"src/app/models/account-model\";\nimport { AccountsService } from \"src/app/services/accounts.service\";\nimport { OperationsService } from \"src/app/services/operations.service\";\nimport OperationModel from \"../../models/operation-model\";\n\n@Component({\n  selector: \"app-main-page\",\n  templateUrl: \"./main-page.component.html\",\n  styleUrls: [\"./main-page.component.css\"],\n})\nexport class MainPageComponent implements OnInit {\n  operations$: Observable<OperationModel[]>;\n  accounts: AccountModel[];\n  constructor(\n    private operationService: OperationsService,\n    private accountsService: AccountsService\n  ) {}\n\n  ngOnInit(): void {\n    this.operationService.getAll();\n    this.operations$ = this.operationService.operations$;\n\n    this.accountsService.getAll();\n    this.accountsService.accounts$.subscribe((res) => (this.accounts = res));\n  }\n\n  search(accNumber: string) {\n    const currAccount = this.accounts.filter((a) => a.number === +accNumber);\n    const account = currAccount[0];\n    if (currAccount.includes(account)) {\n      console.log(account);\n      this.operationService.getByAccount(account._id);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
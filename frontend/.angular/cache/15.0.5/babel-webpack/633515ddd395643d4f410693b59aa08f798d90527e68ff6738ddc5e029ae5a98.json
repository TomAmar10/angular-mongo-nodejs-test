{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(http) {\n    this.http = http;\n    this.URL = 'http://localhost:3700/api/tasks';\n    this.tasksSubject = new BehaviorSubject([]);\n    this.getAll();\n  }\n  getAll() {\n    const result = this.http.get(`${this.URL}/all`).subscribe(res => {\n      this.tasksSubject.next(res);\n    });\n    return result;\n  }\n  get tasks$() {\n    return this.tasksSubject.asObservable();\n  }\n  getById(id) {\n    return this.http.get(`${this.URL}/single/${id}`);\n  }\n  create(task) {\n    return this.http.post(`${this.URL}/all`, task);\n  }\n  update(id, task) {\n    return this.http.put(`${this.URL}/${id}`, task);\n  }\n  delete(id) {\n    this.http.delete(`${this.URL}/${id}`);\n    console.log();\n    // const newList = t\n    this.tasksSubject;\n  }\n}\nTasksService.ɵfac = function TasksService_Factory(t) {\n  return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n};\nTasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TasksService,\n  factory: TasksService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAMlD,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,QAAG,GAAG,iCAAiC;IAE/B,iBAAY,GAAG,IAAIH,eAAe,CAAc,EAAE,CAAC;IAGzD,IAAI,CAACI,MAAM,EAAE;EACf;EAEAA,MAAM;IACJ,MAAMC,MAAM,GAAG,IAAI,CAACF,IAAI,CACrBG,GAAG,CAAc,GAAG,IAAI,CAACC,GAAG,MAAM,CAAC,CACnCC,SAAS,CAAEC,GAAG,IAAI;MACjB,IAAI,CAACC,YAAY,CAACC,IAAI,CAACF,GAAG,CAAC;IAC7B,CAAC,CAAC;IACJ,OAAOJ,MAAM;EACf;EAEA,IAAIO,MAAM;IACR,OAAO,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE;EACzC;EAEAC,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,GAAG,WAAWQ,EAAE,EAAE,CAAC;EAC7D;EAEAC,MAAM,CAACC,IAAe;IACpB,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAY,GAAG,IAAI,CAACX,GAAG,MAAM,EAAEU,IAAI,CAAC;EAC3D;EAEAE,MAAM,CAACJ,EAAU,EAAEE,IAAe;IAChC,OAAO,IAAI,CAACd,IAAI,CAACiB,GAAG,CAAO,GAAG,IAAI,CAACb,GAAG,IAAIQ,EAAE,EAAE,EAAEE,IAAI,CAAC;EACvD;EAEAI,MAAM,CAACN,EAAU;IACf,IAAI,CAACZ,IAAI,CAACkB,MAAM,CAAO,GAAG,IAAI,CAACd,GAAG,IAAIQ,EAAE,EAAE,CAAC;IAC3CO,OAAO,CAACC,GAAG,EAAE;IACb;IACA,IAAI,CAACb,YAAY;EACnB;;AAvCWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAuB,SAAZvB,YAAY;EAAAwB,YAFX;AAAM","names":["BehaviorSubject","TasksService","constructor","http","getAll","result","get","URL","subscribe","res","tasksSubject","next","tasks$","asObservable","getById","id","create","task","post","update","put","delete","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\services\\tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport TaskModel from '../models/task-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TasksService {\n  URL = 'http://localhost:3700/api/tasks';\n\n  private tasksSubject = new BehaviorSubject<TaskModel[]>([]);\n\n  constructor(private http: HttpClient) {\n    this.getAll();\n  }\n\n  getAll() {\n    const result = this.http\n      .get<TaskModel[]>(`${this.URL}/all`)\n      .subscribe((res) => {\n        this.tasksSubject.next(res);\n      });\n    return result;\n  }\n\n  get tasks$(){\n    return this.tasksSubject.asObservable()\n  }\n\n  getById(id: number): Observable<TaskModel> {\n    return this.http.get<TaskModel>(`${this.URL}/single/${id}`);\n  }\n\n  create(task: TaskModel): Observable<TaskModel> {\n    return this.http.post<TaskModel>(`${this.URL}/all`, task);\n  }\n\n  update(id: number, task: TaskModel): Observable<void> {\n    return this.http.put<void>(`${this.URL}/${id}`, task);\n  }\n\n  delete(id: number) {\n    this.http.delete<void>(`${this.URL}/${id}`);\n    console.log()\n    // const newList = t\n    this.tasksSubject\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
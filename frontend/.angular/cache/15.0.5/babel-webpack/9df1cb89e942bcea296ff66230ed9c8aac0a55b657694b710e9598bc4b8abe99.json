{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tasks.service\";\nimport * as i2 from \"@angular/forms\";\nexport class TaskFormComponent {\n  constructor(taskService, fb) {\n    this.taskService = taskService;\n    this.fb = fb;\n    this.selectBorder = '';\n  }\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      description: [null, [Validators.required]],\n      customer_id: [null, [Validators.required]],\n      isDone: [false, [Validators.required]],\n      created: [null]\n    });\n  }\n  onSubmit() {\n    if (!this.myForm.value.customer_id) {\n      this.selectBorder = '3px red solid';\n      return;\n    }\n    const date = new Date(this.myForm.value.created).toISOString().split('.')[0];\n    this.newTask = {\n      ...this.myForm.value,\n      created: date.replace('T', ' ')\n    };\n    this.taskService.create(this.newTask);\n  }\n  validate() {\n    this.selectBorder = '';\n  }\n}\nTaskFormComponent.ɵfac = function TaskFormComponent_Factory(t) {\n  return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nTaskFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskFormComponent,\n  selectors: [[\"app-task-form\"]],\n  decls: 33,\n  vars: 7,\n  consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"description\", \"required\", \"\"], [\"formControlName\", \"customer_id\", 3, \"click\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"ngValue\"], [\"type\", \"datetime-local\", \"formControlName\", \"created\"], [\"type\", \"checkbox\", \"formControlName\", \"isDone\"], [1, \"submit-btn\"]],\n  template: function TaskFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function TaskFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"Add New Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n      i0.ɵɵtext(6, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Customer name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"select\", 3);\n      i0.ɵɵlistener(\"click\", function TaskFormComponent_Template_select_click_11_listener() {\n        return ctx.validate();\n      });\n      i0.ɵɵelementStart(12, \"option\", 4);\n      i0.ɵɵtext(13, \"choose customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 5);\n      i0.ɵɵtext(15, \"tom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"option\", 5);\n      i0.ɵɵtext(17, \"amit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 5);\n      i0.ɵɵtext(19, \"cfir\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\")(21, \"label\");\n      i0.ɵɵtext(22, \"Created:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\")(25, \"label\");\n      i0.ɵɵtext(26, \"Status:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\");\n      i0.ɵɵelement(28, \"input\", 7);\n      i0.ɵɵtext(29, \" done\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 8)(31, \"button\");\n      i0.ɵɵtext(32, \"Add\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵstyleMap(\"outline:\" + ctx.selectBorder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", 2);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", 3);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".form-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  margin-top: 0;\\r\\n  margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n  border: 1px black solid;\\r\\n  padding: 1rem;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\r\\n  width: 24rem;\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  font-size: 1.2rem;\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\ninput[type=text][_ngcontent-%COMP%], input[type=datetime-local][_ngcontent-%COMP%] {\\r\\n  border-radius: 5px;\\r\\n  font-size: 1rem;\\r\\n  padding: 0.2rem 0.5rem;\\r\\n  width: 12.5rem;\\r\\n  border: none;\\r\\n  outline: 3px rgb(106, 104, 104) solid;\\r\\n}\\r\\nform[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\r\\n  border-radius: 5px;\\r\\n  width: 13.5rem;\\r\\n  padding: 0.2rem 0.5rem;\\r\\n  font-size: 1rem;\\r\\n  padding: 0.2rem 1rem;\\r\\n  border: none;\\r\\n  outline: 3px rgb(106, 104, 104) solid;\\r\\n}\\r\\nform[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{\\r\\n  width: 1rem;\\r\\n  margin-right: 1rem;\\r\\n  margin-left: -2rem;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:last-child {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n  background-color: rgb(179, 177, 177);\\r\\n  border: 1px black solid;\\r\\n  font-size: 1rem;\\r\\n  margin-top: 0.5rem;\\r\\n  font-weight: bold;\\r\\n  border-radius: 5px;\\r\\n  padding: 0.3rem 1rem;\\r\\n  cursor: pointer;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover{\\r\\n  background-color: rgb(161, 158, 158);\\r\\n  padding: 0.3rem 1.1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWZvcm0vdGFzay1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2Ysc0JBQXNCO0VBQ3RCLGNBQWM7RUFDZCxZQUFZO0VBQ1oscUNBQXFDO0FBQ3ZDO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2Ysb0JBQW9CO0VBQ3BCLFlBQVk7RUFDWixxQ0FBcUM7QUFDdkM7QUFDQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxvQ0FBb0M7RUFDcEMsdUJBQXVCO0VBQ3ZCLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsZUFBZTtBQUNqQjtBQUNBO0VBQ0Usb0NBQW9DO0VBQ3BDLHNCQUFzQjtBQUN4QiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMnJlbTtcclxufVxyXG5cclxuaDEge1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxufVxyXG5cclxuZm9ybSB7XHJcbiAgYm9yZGVyOiAxcHggYmxhY2sgc29saWQ7XHJcbiAgcGFkZGluZzogMXJlbTtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG5mb3JtIGRpdiB7XHJcbiAgd2lkdGg6IDI0cmVtO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9dGV4dF0sIGlucHV0W3R5cGU9ZGF0ZXRpbWUtbG9jYWxdIHtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIHBhZGRpbmc6IDAuMnJlbSAwLjVyZW07XHJcbiAgd2lkdGg6IDEyLjVyZW07XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIG91dGxpbmU6IDNweCByZ2IoMTA2LCAxMDQsIDEwNCkgc29saWQ7XHJcbn1cclxuZm9ybSBzZWxlY3Qge1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB3aWR0aDogMTMuNXJlbTtcclxuICBwYWRkaW5nOiAwLjJyZW0gMC41cmVtO1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBwYWRkaW5nOiAwLjJyZW0gMXJlbTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgb3V0bGluZTogM3B4IHJnYigxMDYsIDEwNCwgMTA0KSBzb2xpZDtcclxufVxyXG5mb3JtIGlucHV0W3R5cGU9Y2hlY2tib3hde1xyXG4gIHdpZHRoOiAxcmVtO1xyXG4gIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICBtYXJnaW4tbGVmdDogLTJyZW07XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5mb3JtIGRpdjpsYXN0LWNoaWxkIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcbmJ1dHRvbntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc5LCAxNzcsIDE3Nyk7XHJcbiAgYm9yZGVyOiAxcHggYmxhY2sgc29saWQ7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIG1hcmdpbi10b3A6IDAuNXJlbTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgcGFkZGluZzogMC4zcmVtIDFyZW07XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbmJ1dHRvbjpob3ZlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTYxLCAxNTgsIDE1OCk7XHJcbiAgcGFkZGluZzogMC4zcmVtIDEuMXJlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAIEA,UAAU,QACL,gBAAgB;;;;AASvB,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,WAAyB,EAAUC,EAAe;IAAlD,gBAAW,GAAXD,WAAW;IAAwB,OAAE,GAAFC,EAAE;IADzD,iBAAY,GAAG,EAAE;EACwD;EAIzEC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC1BC,WAAW,EAAE,CAAC,IAAI,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MAC1CC,WAAW,EAAE,CAAC,IAAI,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MAC1CE,MAAM,EAAE,CAAC,KAAK,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC,CAAC;MACtCG,OAAO,EAAE,CAAC,IAAI;KACf,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAAC,IAAI,CAACP,MAAM,CAACQ,KAAK,CAACJ,WAAW,EAAE;MAClC,IAAI,CAACK,YAAY,GAAG,eAAe;MACnC;;IAEF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACX,MAAM,CAACQ,KAAK,CAACF,OAAO,CAAC,CAC7CM,WAAW,EAAE,CACbC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG;MAAE,GAAG,IAAI,CAACd,MAAM,CAACQ,KAAK;MAAEF,OAAO,EAAEI,IAAI,CAACK,OAAO,CAAC,GAAG,EAAE,GAAG;IAAC,CAAE;IACxE,IAAI,CAAClB,WAAW,CAACmB,MAAM,CAAC,IAAI,CAACF,OAAO,CAAC;EACvC;EAEAG,QAAQ;IACN,IAAI,CAACR,YAAY,GAAG,EAAE;EACxB;;AA7BWd,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCf9BC,8BAA4B;MACCA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAChDD,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,2BAAK;MACIA,4BAAY;MAAAA,iBAAQ;MAC3BA,2BAA2D;MAC7DA,iBAAM;MACNA,2BAAK;MACIA,+BAAc;MAAAA,iBAAQ;MAC7BA,kCAA+F;MAAzDA;QAAA,OAASC,cAAU;MAAA,EAAC;MACxDD,kCAAkC;MAAAA,gCAAe;MAAAA,iBAAS;MAC1DA,kCAAsB;MAAAA,oBAAG;MAAAA,iBAAS;MAClCA,kCAAsB;MAAAA,qBAAI;MAAAA,iBAAS;MACnCA,kCAAsB;MAAAA,qBAAI;MAAAA,iBAAS;MAGvCA,4BAAK;MACIA,yBAAQ;MAAAA,iBAAQ;MACvBA,4BAAyD;MAC3DA,iBAAM;MACNA,4BAAK;MACIA,wBAAO;MAAAA,iBAAQ;MACtBA,4BAAK;MAAAA,4BAAkD;MAACA,sBAAI;MAAAA,iBAAM;MAEpEA,+BAAwB;MACdA,oBAAG;MAAAA,iBAAS;;;MAxBlBA,eAAoB;MAApBA,sCAAoB;MAQqCA,gBAAmC;MAAnCA,4CAAmC;MACpFA,eAAgB;MAAhBA,8BAAgB;MAChBA,eAAa;MAAbA,2BAAa;MACbA,eAAa;MAAbA,2BAAa;MACbA,eAAa;MAAbA,2BAAa","names":["Validators","TaskFormComponent","constructor","taskService","fb","ngOnInit","myForm","group","description","required","customer_id","isDone","created","onSubmit","value","selectBorder","date","Date","toISOString","split","newTask","replace","create","validate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\components\\task-form\\task-form.component.ts","C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\angular\\test\\frontend\\src\\app\\components\\task-form\\task-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport TaskModel from 'src/app/models/task-model';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css'],\n})\nexport class TaskFormComponent implements OnInit {\n  selectBorder = '';\n  constructor(private taskService: TasksService, private fb: FormBuilder) {}\n  myForm: FormGroup;\n  newTask: TaskModel;\n\n  ngOnInit(): void {\n    this.myForm = this.fb.group({\n      description: [null, [Validators.required]],\n      customer_id: [null, [Validators.required]],\n      isDone: [false, [Validators.required]],\n      created: [null],\n    });\n  }\n\n  onSubmit() {\n    if (!this.myForm.value.customer_id) {\n      this.selectBorder = '3px red solid';\n      return;\n    }\n    const date = new Date(this.myForm.value.created)\n      .toISOString()\n      .split('.')[0];\n    this.newTask = { ...this.myForm.value, created: date.replace('T', ' ') };\n    this.taskService.create(this.newTask);\n  }\n\n  validate() {\n    this.selectBorder = '';\n  }\n}\n","<div class=\"form-container\">\n  <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n    <h1>Add New Task</h1>\n    <div>\n      <label>Description:</label>\n      <input type=\"text\" formControlName=\"description\" required/>\n    </div>\n    <div>\n      <label>Customer name:</label>\n      <select formControlName=\"customer_id\" (click)=\"validate()\" [style]=\"'outline:' + selectBorder\">\n        <option [ngValue]=\"null\" disabled>choose customer</option>\n        <option [ngValue]=\"1\">tom</option>\n        <option [ngValue]=\"2\">amit</option>\n        <option [ngValue]=\"3\">cfir</option>\n      </select>\n    </div>\n    <div>\n      <label>Created:</label>\n      <input type=\"datetime-local\" formControlName=\"created\" />\n    </div>\n    <div>\n      <label>Status:</label>\n      <div><input type=\"checkbox\" formControlName=\"isDone\" /> done</div>\n    </div>\n    <div class=\"submit-btn\">\n      <button>Add</button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountsService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:3200/api/accounts\";\n    this.accountSubject = new BehaviorSubject([]);\n  }\n  get accounts$() {\n    return this.accountSubject.asObservable();\n  }\n  getAll() {\n    this.http.get(`${this.URL}/all`).subscribe(res => {\n      this.accountSubject.next(res);\n    });\n  }\n}\nAccountsService.ɵfac = function AccountsService_Factory(t) {\n  return new (t || AccountsService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountsService,\n  factory: AccountsService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,QAAG,GAAG,oCAAoC;IAElC,mBAAc,GAAG,IAAIH,eAAe,CAAiB,EAAE,CAAC;EAEzB;EAEvC,IAAII,SAAS;IACX,OAAO,IAAI,CAACC,cAAc,CAACC,YAAY,EAAE;EAC3C;EAEAC,MAAM;IACJ,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAiB,GAAG,IAAI,CAACC,GAAG,MAAM,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAI;MACjE,IAAI,CAACN,cAAc,CAACO,IAAI,CAACD,GAAG,CAAC;IAC/B,CAAC,CAAC;EACJ;;AAfWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;EAAAa,YAFd;AAAM","names":["BehaviorSubject","AccountsService","constructor","http","accounts$","accountSubject","asObservable","getAll","get","URL","subscribe","res","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\OneDrive\\Desktop\\John Brice\\mongoDB\\TomAmar_test4\\frontend\\src\\app\\services\\accounts.service.ts"],"sourcesContent":["import { Injectable, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport AccountModel from \"../models/account-model\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AccountsService {\r\n  URL = \"http://localhost:3200/api/accounts\";\r\n\r\n  private accountSubject = new BehaviorSubject<AccountModel[]>([]);\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get accounts$() {\r\n    return this.accountSubject.asObservable();\r\n  }\r\n\r\n  getAll() {\r\n    this.http.get<AccountModel[]>(`${this.URL}/all`).subscribe((res) => {\r\n      this.accountSubject.next(res);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}